var IotaPublicNodeSelection =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ServerSelection.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Geographics.js":
/*!****************************!*\
  !*** ./src/Geographics.js ***!
  \****************************/
/*! exports provided: getDistanceFromLatLonInKm, countryMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDistanceFromLatLonInKm\", function() { return getDistanceFromLatLonInKm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"countryMap\", function() { return countryMap; });\n\n\nfunction getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2 - lat1); // deg2rad below\n    var dLon = deg2rad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n    return d;\n}\n\nfunction deg2rad(deg) {\n    return deg * (Math.PI / 180);\n}\n\nconst countryMap = {\n    \"EU\": { //EU center is considered germany, why ? because IOTA ;)\n        \"country\": \"EU\",\n        \"latitude\": 51.165691,\n        \"longitude\": 10.451526,\n        \"name\": \"EU\"\n    },\n    \"AD\": {\n        \"country\": \"AD\",\n        \"latitude\": 42.546245,\n        \"longitude\": 1.601554,\n        \"name\": \"Andorra\"\n    },\n    \"AE\": {\n        \"country\": \"AE\",\n        \"latitude\": 23.424076,\n        \"longitude\": 53.847818,\n        \"name\": \"United Arab Emirates\"\n    },\n    \"AF\": {\n        \"country\": \"AF\",\n        \"latitude\": 33.93911,\n        \"longitude\": 67.709953,\n        \"name\": \"Afghanistan\"\n    },\n    \"AG\": {\n        \"country\": \"AG\",\n        \"latitude\": 17.060816,\n        \"longitude\": -61.796428,\n        \"name\": \"Antigua and Barbuda\"\n    },\n    \"AI\": {\n        \"country\": \"AI\",\n        \"latitude\": 18.220554,\n        \"longitude\": -63.068615,\n        \"name\": \"Anguilla\"\n    },\n    \"AL\": {\n        \"country\": \"AL\",\n        \"latitude\": 41.153332,\n        \"longitude\": 20.168331,\n        \"name\": \"Albania\"\n    },\n    \"AM\": {\n        \"country\": \"AM\",\n        \"latitude\": 40.069099,\n        \"longitude\": 45.038189,\n        \"name\": \"Armenia\"\n    },\n    \"AN\": {\n        \"country\": \"AN\",\n        \"latitude\": 12.226079,\n        \"longitude\": -69.060087,\n        \"name\": \"Netherlands Antilles\"\n    },\n    \"AO\": {\n        \"country\": \"AO\",\n        \"latitude\": -11.202692,\n        \"longitude\": 17.873887,\n        \"name\": \"Angola\"\n    },\n    \"AQ\": {\n        \"country\": \"AQ\",\n        \"latitude\": -75.250973,\n        \"longitude\": -0.071389,\n        \"name\": \"Antarctica\"\n    },\n    \"AR\": {\n        \"country\": \"AR\",\n        \"latitude\": -38.416097,\n        \"longitude\": -63.616672,\n        \"name\": \"Argentina\"\n    },\n    \"AS\": {\n        \"country\": \"AS\",\n        \"latitude\": -14.270972,\n        \"longitude\": -170.132217,\n        \"name\": \"American Samoa\"\n    },\n    \"AT\": {\n        \"country\": \"AT\",\n        \"latitude\": 47.516231,\n        \"longitude\": 14.550072,\n        \"name\": \"Austria\"\n    },\n    \"AU\": {\n        \"country\": \"AU\",\n        \"latitude\": -25.274398,\n        \"longitude\": 133.775136,\n        \"name\": \"Australia\"\n    },\n    \"AW\": {\n        \"country\": \"AW\",\n        \"latitude\": 12.52111,\n        \"longitude\": -69.968338,\n        \"name\": \"Aruba\"\n    },\n    \"AZ\": {\n        \"country\": \"AZ\",\n        \"latitude\": 40.143105,\n        \"longitude\": 47.576927,\n        \"name\": \"Azerbaijan\"\n    },\n    \"BA\": {\n        \"country\": \"BA\",\n        \"latitude\": 43.915886,\n        \"longitude\": 17.679076,\n        \"name\": \"Bosnia and Herzegovina\"\n    },\n    \"BB\": {\n        \"country\": \"BB\",\n        \"latitude\": 13.193887,\n        \"longitude\": -59.543198,\n        \"name\": \"Barbados\"\n    },\n    \"BD\": {\n        \"country\": \"BD\",\n        \"latitude\": 23.684994,\n        \"longitude\": 90.356331,\n        \"name\": \"Bangladesh\"\n    },\n    \"BE\": {\n        \"country\": \"BE\",\n        \"latitude\": 50.503887,\n        \"longitude\": 4.469936,\n        \"name\": \"Belgium\"\n    },\n    \"BF\": {\n        \"country\": \"BF\",\n        \"latitude\": 12.238333,\n        \"longitude\": -1.561593,\n        \"name\": \"Burkina Faso\"\n    },\n    \"BG\": {\n        \"country\": \"BG\",\n        \"latitude\": 42.733883,\n        \"longitude\": 25.48583,\n        \"name\": \"Bulgaria\"\n    },\n    \"BH\": {\n        \"country\": \"BH\",\n        \"latitude\": 25.930414,\n        \"longitude\": 50.637772,\n        \"name\": \"Bahrain\"\n    },\n    \"BI\": {\n        \"country\": \"BI\",\n        \"latitude\": -3.373056,\n        \"longitude\": 29.918886,\n        \"name\": \"Burundi\"\n    },\n    \"BJ\": {\n        \"country\": \"BJ\",\n        \"latitude\": 9.30769,\n        \"longitude\": 2.315834,\n        \"name\": \"Benin\"\n    },\n    \"BM\": {\n        \"country\": \"BM\",\n        \"latitude\": 32.321384,\n        \"longitude\": -64.75737,\n        \"name\": \"Bermuda\"\n    },\n    \"BN\": {\n        \"country\": \"BN\",\n        \"latitude\": 4.535277,\n        \"longitude\": 114.727669,\n        \"name\": \"Brunei\"\n    },\n    \"BO\": {\n        \"country\": \"BO\",\n        \"latitude\": -16.290154,\n        \"longitude\": -63.588653,\n        \"name\": \"Bolivia\"\n    },\n    \"BR\": {\n        \"country\": \"BR\",\n        \"latitude\": -14.235004,\n        \"longitude\": -51.92528,\n        \"name\": \"Brazil\"\n    },\n    \"BS\": {\n        \"country\": \"BS\",\n        \"latitude\": 25.03428,\n        \"longitude\": -77.39628,\n        \"name\": \"Bahamas\"\n    },\n    \"BT\": {\n        \"country\": \"BT\",\n        \"latitude\": 27.514162,\n        \"longitude\": 90.433601,\n        \"name\": \"Bhutan\"\n    },\n    \"BV\": {\n        \"country\": \"BV\",\n        \"latitude\": -54.423199,\n        \"longitude\": 3.413194,\n        \"name\": \"Bouvet Island\"\n    },\n    \"BW\": {\n        \"country\": \"BW\",\n        \"latitude\": -22.328474,\n        \"longitude\": 24.684866,\n        \"name\": \"Botswana\"\n    },\n    \"BY\": {\n        \"country\": \"BY\",\n        \"latitude\": 53.709807,\n        \"longitude\": 27.953389,\n        \"name\": \"Belarus\"\n    },\n    \"BZ\": {\n        \"country\": \"BZ\",\n        \"latitude\": 17.189877,\n        \"longitude\": -88.49765,\n        \"name\": \"Belize\"\n    },\n    \"CA\": {\n        \"country\": \"CA\",\n        \"latitude\": 56.130366,\n        \"longitude\": -106.346771,\n        \"name\": \"Canada\"\n    },\n    \"CC\": {\n        \"country\": \"CC\",\n        \"latitude\": -12.164165,\n        \"longitude\": 96.870956,\n        \"name\": \"Cocos [Keeling] Islands\"\n    },\n    \"CD\": {\n        \"country\": \"CD\",\n        \"latitude\": -4.038333,\n        \"longitude\": 21.758664,\n        \"name\": \"Congo [DRC]\"\n    },\n    \"CF\": {\n        \"country\": \"CF\",\n        \"latitude\": 6.611111,\n        \"longitude\": 20.939444,\n        \"name\": \"Central African Republic\"\n    },\n    \"CG\": {\n        \"country\": \"CG\",\n        \"latitude\": -0.228021,\n        \"longitude\": 15.827659,\n        \"name\": \"Congo [Republic]\"\n    },\n    \"CH\": {\n        \"country\": \"CH\",\n        \"latitude\": 46.818188,\n        \"longitude\": 8.227512,\n        \"name\": \"Switzerland\"\n    },\n    \"CI\": {\n        \"country\": \"CI\",\n        \"latitude\": 7.539989,\n        \"longitude\": -5.54708,\n        \"name\": \"Côte d'Ivoire\"\n    },\n    \"CK\": {\n        \"country\": \"CK\",\n        \"latitude\": -21.236736,\n        \"longitude\": -159.777671,\n        \"name\": \"Cook Islands\"\n    },\n    \"CL\": {\n        \"country\": \"CL\",\n        \"latitude\": -35.675147,\n        \"longitude\": -71.542969,\n        \"name\": \"Chile\"\n    },\n    \"CM\": {\n        \"country\": \"CM\",\n        \"latitude\": 7.369722,\n        \"longitude\": 12.354722,\n        \"name\": \"Cameroon\"\n    },\n    \"CN\": {\n        \"country\": \"CN\",\n        \"latitude\": 35.86166,\n        \"longitude\": 104.195397,\n        \"name\": \"China\"\n    },\n    \"CO\": {\n        \"country\": \"CO\",\n        \"latitude\": 4.570868,\n        \"longitude\": -74.297333,\n        \"name\": \"Colombia\"\n    },\n    \"CR\": {\n        \"country\": \"CR\",\n        \"latitude\": 9.748917,\n        \"longitude\": -83.753428,\n        \"name\": \"Costa Rica\"\n    },\n    \"CU\": {\n        \"country\": \"CU\",\n        \"latitude\": 21.521757,\n        \"longitude\": -77.781167,\n        \"name\": \"Cuba\"\n    },\n    \"CV\": {\n        \"country\": \"CV\",\n        \"latitude\": 16.002082,\n        \"longitude\": -24.013197,\n        \"name\": \"Cape Verde\"\n    },\n    \"CX\": {\n        \"country\": \"CX\",\n        \"latitude\": -10.447525,\n        \"longitude\": 105.690449,\n        \"name\": \"Christmas Island\"\n    },\n    \"CY\": {\n        \"country\": \"CY\",\n        \"latitude\": 35.126413,\n        \"longitude\": 33.429859,\n        \"name\": \"Cyprus\"\n    },\n    \"CZ\": {\n        \"country\": \"CZ\",\n        \"latitude\": 49.817492,\n        \"longitude\": 15.472962,\n        \"name\": \"Czech Republic\"\n    },\n    \"DE\": {\n        \"country\": \"DE\",\n        \"latitude\": 51.165691,\n        \"longitude\": 10.451526,\n        \"name\": \"Germany\"\n    },\n    \"DJ\": {\n        \"country\": \"DJ\",\n        \"latitude\": 11.825138,\n        \"longitude\": 42.590275,\n        \"name\": \"Djibouti\"\n    },\n    \"DK\": {\n        \"country\": \"DK\",\n        \"latitude\": 56.26392,\n        \"longitude\": 9.501785,\n        \"name\": \"Denmark\"\n    },\n    \"DM\": {\n        \"country\": \"DM\",\n        \"latitude\": 15.414999,\n        \"longitude\": -61.370976,\n        \"name\": \"Dominica\"\n    },\n    \"DO\": {\n        \"country\": \"DO\",\n        \"latitude\": 18.735693,\n        \"longitude\": -70.162651,\n        \"name\": \"Dominican Republic\"\n    },\n    \"DZ\": {\n        \"country\": \"DZ\",\n        \"latitude\": 28.033886,\n        \"longitude\": 1.659626,\n        \"name\": \"Algeria\"\n    },\n    \"EC\": {\n        \"country\": \"EC\",\n        \"latitude\": -1.831239,\n        \"longitude\": -78.183406,\n        \"name\": \"Ecuador\"\n    },\n    \"EE\": {\n        \"country\": \"EE\",\n        \"latitude\": 58.595272,\n        \"longitude\": 25.013607,\n        \"name\": \"Estonia\"\n    },\n    \"EG\": {\n        \"country\": \"EG\",\n        \"latitude\": 26.820553,\n        \"longitude\": 30.802498,\n        \"name\": \"Egypt\"\n    },\n    \"EH\": {\n        \"country\": \"EH\",\n        \"latitude\": 24.215527,\n        \"longitude\": -12.885834,\n        \"name\": \"Western Sahara\"\n    },\n    \"ER\": {\n        \"country\": \"ER\",\n        \"latitude\": 15.179384,\n        \"longitude\": 39.782334,\n        \"name\": \"Eritrea\"\n    },\n    \"ES\": {\n        \"country\": \"ES\",\n        \"latitude\": 40.463667,\n        \"longitude\": -3.74922,\n        \"name\": \"Spain\"\n    },\n    \"ET\": {\n        \"country\": \"ET\",\n        \"latitude\": 9.145,\n        \"longitude\": 40.489673,\n        \"name\": \"Ethiopia\"\n    },\n    \"FI\": {\n        \"country\": \"FI\",\n        \"latitude\": 61.92411,\n        \"longitude\": 25.748151,\n        \"name\": \"Finland\"\n    },\n    \"FJ\": {\n        \"country\": \"FJ\",\n        \"latitude\": -16.578193,\n        \"longitude\": 179.414413,\n        \"name\": \"Fiji\"\n    },\n    \"FK\": {\n        \"country\": \"FK\",\n        \"latitude\": -51.796253,\n        \"longitude\": -59.523613,\n        \"name\": \"Falkland Islands [Islas Malvinas]\"\n    },\n    \"FM\": {\n        \"country\": \"FM\",\n        \"latitude\": 7.425554,\n        \"longitude\": 150.550812,\n        \"name\": \"Micronesia\"\n    },\n    \"FO\": {\n        \"country\": \"FO\",\n        \"latitude\": 61.892635,\n        \"longitude\": -6.911806,\n        \"name\": \"Faroe Islands\"\n    },\n    \"FR\": {\n        \"country\": \"FR\",\n        \"latitude\": 46.227638,\n        \"longitude\": 2.213749,\n        \"name\": \"France\"\n    },\n    \"GA\": {\n        \"country\": \"GA\",\n        \"latitude\": -0.803689,\n        \"longitude\": 11.609444,\n        \"name\": \"Gabon\"\n    },\n    \"GB\": {\n        \"country\": \"GB\",\n        \"latitude\": 55.378051,\n        \"longitude\": -3.435973,\n        \"name\": \"United Kingdom\"\n    },\n    \"UK\": {\n        \"country\": \"UK\",\n        \"latitude\": 55.378051,\n        \"longitude\": -3.435973,\n        \"name\": \"United Kingdom\"\n    },\n    \"GD\": {\n        \"country\": \"GD\",\n        \"latitude\": 12.262776,\n        \"longitude\": -61.604171,\n        \"name\": \"Grenada\"\n    },\n    \"GE\": {\n        \"country\": \"GE\",\n        \"latitude\": 42.315407,\n        \"longitude\": 43.356892,\n        \"name\": \"Georgia\"\n    },\n    \"GF\": {\n        \"country\": \"GF\",\n        \"latitude\": 3.933889,\n        \"longitude\": -53.125782,\n        \"name\": \"French Guiana\"\n    },\n    \"GG\": {\n        \"country\": \"GG\",\n        \"latitude\": 49.465691,\n        \"longitude\": -2.585278,\n        \"name\": \"Guernsey\"\n    },\n    \"GH\": {\n        \"country\": \"GH\",\n        \"latitude\": 7.946527,\n        \"longitude\": -1.023194,\n        \"name\": \"Ghana\"\n    },\n    \"GI\": {\n        \"country\": \"GI\",\n        \"latitude\": 36.137741,\n        \"longitude\": -5.345374,\n        \"name\": \"Gibraltar\"\n    },\n    \"GL\": {\n        \"country\": \"GL\",\n        \"latitude\": 71.706936,\n        \"longitude\": -42.604303,\n        \"name\": \"Greenland\"\n    },\n    \"GM\": {\n        \"country\": \"GM\",\n        \"latitude\": 13.443182,\n        \"longitude\": -15.310139,\n        \"name\": \"Gambia\"\n    },\n    \"GN\": {\n        \"country\": \"GN\",\n        \"latitude\": 9.945587,\n        \"longitude\": -9.696645,\n        \"name\": \"Guinea\"\n    },\n    \"GP\": {\n        \"country\": \"GP\",\n        \"latitude\": 16.995971,\n        \"longitude\": -62.067641,\n        \"name\": \"Guadeloupe\"\n    },\n    \"GQ\": {\n        \"country\": \"GQ\",\n        \"latitude\": 1.650801,\n        \"longitude\": 10.267895,\n        \"name\": \"Equatorial Guinea\"\n    },\n    \"GR\": {\n        \"country\": \"GR\",\n        \"latitude\": 39.074208,\n        \"longitude\": 21.824312,\n        \"name\": \"Greece\"\n    },\n    \"GS\": {\n        \"country\": \"GS\",\n        \"latitude\": -54.429579,\n        \"longitude\": -36.587909,\n        \"name\": \"South Georgia and the South Sandwich Islands\"\n    },\n    \"GT\": {\n        \"country\": \"GT\",\n        \"latitude\": 15.783471,\n        \"longitude\": -90.230759,\n        \"name\": \"Guatemala\"\n    },\n    \"GU\": {\n        \"country\": \"GU\",\n        \"latitude\": 13.444304,\n        \"longitude\": 144.793731,\n        \"name\": \"Guam\"\n    },\n    \"GW\": {\n        \"country\": \"GW\",\n        \"latitude\": 11.803749,\n        \"longitude\": -15.180413,\n        \"name\": \"Guinea-Bissau\"\n    },\n    \"GY\": {\n        \"country\": \"GY\",\n        \"latitude\": 4.860416,\n        \"longitude\": -58.93018,\n        \"name\": \"Guyana\"\n    },\n    \"GZ\": {\n        \"country\": \"GZ\",\n        \"latitude\": 31.354676,\n        \"longitude\": 34.308825,\n        \"name\": \"Gaza Strip\"\n    },\n    \"HK\": {\n        \"country\": \"HK\",\n        \"latitude\": 22.396428,\n        \"longitude\": 114.109497,\n        \"name\": \"Hong Kong\"\n    },\n    \"HM\": {\n        \"country\": \"HM\",\n        \"latitude\": -53.08181,\n        \"longitude\": 73.504158,\n        \"name\": \"Heard Island and McDonald Islands\"\n    },\n    \"HN\": {\n        \"country\": \"HN\",\n        \"latitude\": 15.199999,\n        \"longitude\": -86.241905,\n        \"name\": \"Honduras\"\n    },\n    \"HR\": {\n        \"country\": \"HR\",\n        \"latitude\": 45.1,\n        \"longitude\": 15.2,\n        \"name\": \"Croatia\"\n    },\n    \"HT\": {\n        \"country\": \"HT\",\n        \"latitude\": 18.971187,\n        \"longitude\": -72.285215,\n        \"name\": \"Haiti\"\n    },\n    \"HU\": {\n        \"country\": \"HU\",\n        \"latitude\": 47.162494,\n        \"longitude\": 19.503304,\n        \"name\": \"Hungary\"\n    },\n    \"ID\": {\n        \"country\": \"ID\",\n        \"latitude\": -0.789275,\n        \"longitude\": 113.921327,\n        \"name\": \"Indonesia\"\n    },\n    \"IE\": {\n        \"country\": \"IE\",\n        \"latitude\": 53.41291,\n        \"longitude\": -8.24389,\n        \"name\": \"Ireland\"\n    },\n    \"IL\": {\n        \"country\": \"IL\",\n        \"latitude\": 31.046051,\n        \"longitude\": 34.851612,\n        \"name\": \"Israel\"\n    },\n    \"IM\": {\n        \"country\": \"IM\",\n        \"latitude\": 54.236107,\n        \"longitude\": -4.548056,\n        \"name\": \"Isle of Man\"\n    },\n    \"IN\": {\n        \"country\": \"IN\",\n        \"latitude\": 20.593684,\n        \"longitude\": 78.96288,\n        \"name\": \"India\"\n    },\n    \"IO\": {\n        \"country\": \"IO\",\n        \"latitude\": -6.343194,\n        \"longitude\": 71.876519,\n        \"name\": \"British Indian Ocean Territory\"\n    },\n    \"IQ\": {\n        \"country\": \"IQ\",\n        \"latitude\": 33.223191,\n        \"longitude\": 43.679291,\n        \"name\": \"Iraq\"\n    },\n    \"IR\": {\n        \"country\": \"IR\",\n        \"latitude\": 32.427908,\n        \"longitude\": 53.688046,\n        \"name\": \"Iran\"\n    },\n    \"IS\": {\n        \"country\": \"IS\",\n        \"latitude\": 64.963051,\n        \"longitude\": -19.020835,\n        \"name\": \"Iceland\"\n    },\n    \"IT\": {\n        \"country\": \"IT\",\n        \"latitude\": 41.87194,\n        \"longitude\": 12.56738,\n        \"name\": \"Italy\"\n    },\n    \"JE\": {\n        \"country\": \"JE\",\n        \"latitude\": 49.214439,\n        \"longitude\": -2.13125,\n        \"name\": \"Jersey\"\n    },\n    \"JM\": {\n        \"country\": \"JM\",\n        \"latitude\": 18.109581,\n        \"longitude\": -77.297508,\n        \"name\": \"Jamaica\"\n    },\n    \"JO\": {\n        \"country\": \"JO\",\n        \"latitude\": 30.585164,\n        \"longitude\": 36.238414,\n        \"name\": \"Jordan\"\n    },\n    \"JP\": {\n        \"country\": \"JP\",\n        \"latitude\": 36.204824,\n        \"longitude\": 138.252924,\n        \"name\": \"Japan\"\n    },\n    \"KE\": {\n        \"country\": \"KE\",\n        \"latitude\": -0.023559,\n        \"longitude\": 37.906193,\n        \"name\": \"Kenya\"\n    },\n    \"KG\": {\n        \"country\": \"KG\",\n        \"latitude\": 41.20438,\n        \"longitude\": 74.766098,\n        \"name\": \"Kyrgyzstan\"\n    },\n    \"KH\": {\n        \"country\": \"KH\",\n        \"latitude\": 12.565679,\n        \"longitude\": 104.990963,\n        \"name\": \"Cambodia\"\n    },\n    \"KI\": {\n        \"country\": \"KI\",\n        \"latitude\": -3.370417,\n        \"longitude\": -168.734039,\n        \"name\": \"Kiribati\"\n    },\n    \"KM\": {\n        \"country\": \"KM\",\n        \"latitude\": -11.875001,\n        \"longitude\": 43.872219,\n        \"name\": \"Comoros\"\n    },\n    \"KN\": {\n        \"country\": \"KN\",\n        \"latitude\": 17.357822,\n        \"longitude\": -62.782998,\n        \"name\": \"Saint Kitts and Nevis\"\n    },\n    \"KP\": {\n        \"country\": \"KP\",\n        \"latitude\": 40.339852,\n        \"longitude\": 127.510093,\n        \"name\": \"North Korea\"\n    },\n    \"KR\": {\n        \"country\": \"KR\",\n        \"latitude\": 35.907757,\n        \"longitude\": 127.766922,\n        \"name\": \"South Korea\"\n    },\n    \"KW\": {\n        \"country\": \"KW\",\n        \"latitude\": 29.31166,\n        \"longitude\": 47.481766,\n        \"name\": \"Kuwait\"\n    },\n    \"KY\": {\n        \"country\": \"KY\",\n        \"latitude\": 19.513469,\n        \"longitude\": -80.566956,\n        \"name\": \"Cayman Islands\"\n    },\n    \"KZ\": {\n        \"country\": \"KZ\",\n        \"latitude\": 48.019573,\n        \"longitude\": 66.923684,\n        \"name\": \"Kazakhstan\"\n    },\n    \"LA\": {\n        \"country\": \"LA\",\n        \"latitude\": 19.85627,\n        \"longitude\": 102.495496,\n        \"name\": \"Laos\"\n    },\n    \"LB\": {\n        \"country\": \"LB\",\n        \"latitude\": 33.854721,\n        \"longitude\": 35.862285,\n        \"name\": \"Lebanon\"\n    },\n    \"LC\": {\n        \"country\": \"LC\",\n        \"latitude\": 13.909444,\n        \"longitude\": -60.978893,\n        \"name\": \"Saint Lucia\"\n    },\n    \"LI\": {\n        \"country\": \"LI\",\n        \"latitude\": 47.166,\n        \"longitude\": 9.555373,\n        \"name\": \"Liechtenstein\"\n    },\n    \"LK\": {\n        \"country\": \"LK\",\n        \"latitude\": 7.873054,\n        \"longitude\": 80.771797,\n        \"name\": \"Sri Lanka\"\n    },\n    \"LR\": {\n        \"country\": \"LR\",\n        \"latitude\": 6.428055,\n        \"longitude\": -9.429499,\n        \"name\": \"Liberia\"\n    },\n    \"LS\": {\n        \"country\": \"LS\",\n        \"latitude\": -29.609988,\n        \"longitude\": 28.233608,\n        \"name\": \"Lesotho\"\n    },\n    \"LT\": {\n        \"country\": \"LT\",\n        \"latitude\": 55.169438,\n        \"longitude\": 23.881275,\n        \"name\": \"Lithuania\"\n    },\n    \"LU\": {\n        \"country\": \"LU\",\n        \"latitude\": 49.815273,\n        \"longitude\": 6.129583,\n        \"name\": \"Luxembourg\"\n    },\n    \"LV\": {\n        \"country\": \"LV\",\n        \"latitude\": 56.879635,\n        \"longitude\": 24.603189,\n        \"name\": \"Latvia\"\n    },\n    \"LY\": {\n        \"country\": \"LY\",\n        \"latitude\": 26.3351,\n        \"longitude\": 17.228331,\n        \"name\": \"Libya\"\n    },\n    \"MA\": {\n        \"country\": \"MA\",\n        \"latitude\": 31.791702,\n        \"longitude\": -7.09262,\n        \"name\": \"Morocco\"\n    },\n    \"MC\": {\n        \"country\": \"MC\",\n        \"latitude\": 43.750298,\n        \"longitude\": 7.412841,\n        \"name\": \"Monaco\"\n    },\n    \"MD\": {\n        \"country\": \"MD\",\n        \"latitude\": 47.411631,\n        \"longitude\": 28.369885,\n        \"name\": \"Moldova\"\n    },\n    \"ME\": {\n        \"country\": \"ME\",\n        \"latitude\": 42.708678,\n        \"longitude\": 19.37439,\n        \"name\": \"Montenegro\"\n    },\n    \"MG\": {\n        \"country\": \"MG\",\n        \"latitude\": -18.766947,\n        \"longitude\": 46.869107,\n        \"name\": \"Madagascar\"\n    },\n    \"MH\": {\n        \"country\": \"MH\",\n        \"latitude\": 7.131474,\n        \"longitude\": 171.184478,\n        \"name\": \"Marshall Islands\"\n    },\n    \"MK\": {\n        \"country\": \"MK\",\n        \"latitude\": 41.608635,\n        \"longitude\": 21.745275,\n        \"name\": \"Macedonia [FYROM]\"\n    },\n    \"ML\": {\n        \"country\": \"ML\",\n        \"latitude\": 17.570692,\n        \"longitude\": -3.996166,\n        \"name\": \"Mali\"\n    },\n    \"MM\": {\n        \"country\": \"MM\",\n        \"latitude\": 21.913965,\n        \"longitude\": 95.956223,\n        \"name\": \"Myanmar [Burma]\"\n    },\n    \"MN\": {\n        \"country\": \"MN\",\n        \"latitude\": 46.862496,\n        \"longitude\": 103.846656,\n        \"name\": \"Mongolia\"\n    },\n    \"MO\": {\n        \"country\": \"MO\",\n        \"latitude\": 22.198745,\n        \"longitude\": 113.543873,\n        \"name\": \"Macau\"\n    },\n    \"MP\": {\n        \"country\": \"MP\",\n        \"latitude\": 17.33083,\n        \"longitude\": 145.38469,\n        \"name\": \"Northern Mariana Islands\"\n    },\n    \"MQ\": {\n        \"country\": \"MQ\",\n        \"latitude\": 14.641528,\n        \"longitude\": -61.024174,\n        \"name\": \"Martinique\"\n    },\n    \"MR\": {\n        \"country\": \"MR\",\n        \"latitude\": 21.00789,\n        \"longitude\": -10.940835,\n        \"name\": \"Mauritania\"\n    },\n    \"MS\": {\n        \"country\": \"MS\",\n        \"latitude\": 16.742498,\n        \"longitude\": -62.187366,\n        \"name\": \"Montserrat\"\n    },\n    \"MT\": {\n        \"country\": \"MT\",\n        \"latitude\": 35.937496,\n        \"longitude\": 14.375416,\n        \"name\": \"Malta\"\n    },\n    \"MU\": {\n        \"country\": \"MU\",\n        \"latitude\": -20.348404,\n        \"longitude\": 57.552152,\n        \"name\": \"Mauritius\"\n    },\n    \"MV\": {\n        \"country\": \"MV\",\n        \"latitude\": 3.202778,\n        \"longitude\": 73.22068,\n        \"name\": \"Maldives\"\n    },\n    \"MW\": {\n        \"country\": \"MW\",\n        \"latitude\": -13.254308,\n        \"longitude\": 34.301525,\n        \"name\": \"Malawi\"\n    },\n    \"MX\": {\n        \"country\": \"MX\",\n        \"latitude\": 23.634501,\n        \"longitude\": -102.552784,\n        \"name\": \"Mexico\"\n    },\n    \"MY\": {\n        \"country\": \"MY\",\n        \"latitude\": 4.210484,\n        \"longitude\": 101.975766,\n        \"name\": \"Malaysia\"\n    },\n    \"MZ\": {\n        \"country\": \"MZ\",\n        \"latitude\": -18.665695,\n        \"longitude\": 35.529562,\n        \"name\": \"Mozambique\"\n    },\n    \"NA\": {\n        \"country\": \"NA\",\n        \"latitude\": -22.95764,\n        \"longitude\": 18.49041,\n        \"name\": \"Namibia\"\n    },\n    \"NC\": {\n        \"country\": \"NC\",\n        \"latitude\": -20.904305,\n        \"longitude\": 165.618042,\n        \"name\": \"New Caledonia\"\n    },\n    \"NE\": {\n        \"country\": \"NE\",\n        \"latitude\": 17.607789,\n        \"longitude\": 8.081666,\n        \"name\": \"Niger\"\n    },\n    \"NF\": {\n        \"country\": \"NF\",\n        \"latitude\": -29.040835,\n        \"longitude\": 167.954712,\n        \"name\": \"Norfolk Island\"\n    },\n    \"NG\": {\n        \"country\": \"NG\",\n        \"latitude\": 9.081999,\n        \"longitude\": 8.675277,\n        \"name\": \"Nigeria\"\n    },\n    \"NI\": {\n        \"country\": \"NI\",\n        \"latitude\": 12.865416,\n        \"longitude\": -85.207229,\n        \"name\": \"Nicaragua\"\n    },\n    \"NL\": {\n        \"country\": \"NL\",\n        \"latitude\": 52.132633,\n        \"longitude\": 5.291266,\n        \"name\": \"Netherlands\"\n    },\n    \"NO\": {\n        \"country\": \"NO\",\n        \"latitude\": 60.472024,\n        \"longitude\": 8.468946,\n        \"name\": \"Norway\"\n    },\n    \"NP\": {\n        \"country\": \"NP\",\n        \"latitude\": 28.394857,\n        \"longitude\": 84.124008,\n        \"name\": \"Nepal\"\n    },\n    \"NR\": {\n        \"country\": \"NR\",\n        \"latitude\": -0.522778,\n        \"longitude\": 166.931503,\n        \"name\": \"Nauru\"\n    },\n    \"NU\": {\n        \"country\": \"NU\",\n        \"latitude\": -19.054445,\n        \"longitude\": -169.867233,\n        \"name\": \"Niue\"\n    },\n    \"NZ\": {\n        \"country\": \"NZ\",\n        \"latitude\": -40.900557,\n        \"longitude\": 174.885971,\n        \"name\": \"New Zealand\"\n    },\n    \"OM\": {\n        \"country\": \"OM\",\n        \"latitude\": 21.512583,\n        \"longitude\": 55.923255,\n        \"name\": \"Oman\"\n    },\n    \"PA\": {\n        \"country\": \"PA\",\n        \"latitude\": 8.537981,\n        \"longitude\": -80.782127,\n        \"name\": \"Panama\"\n    },\n    \"PE\": {\n        \"country\": \"PE\",\n        \"latitude\": -9.189967,\n        \"longitude\": -75.015152,\n        \"name\": \"Peru\"\n    },\n    \"PF\": {\n        \"country\": \"PF\",\n        \"latitude\": -17.679742,\n        \"longitude\": -149.406843,\n        \"name\": \"French Polynesia\"\n    },\n    \"PG\": {\n        \"country\": \"PG\",\n        \"latitude\": -6.314993,\n        \"longitude\": 143.95555,\n        \"name\": \"Papua New Guinea\"\n    },\n    \"PH\": {\n        \"country\": \"PH\",\n        \"latitude\": 12.879721,\n        \"longitude\": 121.774017,\n        \"name\": \"Philippines\"\n    },\n    \"PK\": {\n        \"country\": \"PK\",\n        \"latitude\": 30.375321,\n        \"longitude\": 69.345116,\n        \"name\": \"Pakistan\"\n    },\n    \"PL\": {\n        \"country\": \"PL\",\n        \"latitude\": 51.919438,\n        \"longitude\": 19.145136,\n        \"name\": \"Poland\"\n    },\n    \"PM\": {\n        \"country\": \"PM\",\n        \"latitude\": 46.941936,\n        \"longitude\": -56.27111,\n        \"name\": \"Saint Pierre and Miquelon\"\n    },\n    \"PN\": {\n        \"country\": \"PN\",\n        \"latitude\": -24.703615,\n        \"longitude\": -127.439308,\n        \"name\": \"Pitcairn Islands\"\n    },\n    \"PR\": {\n        \"country\": \"PR\",\n        \"latitude\": 18.220833,\n        \"longitude\": -66.590149,\n        \"name\": \"Puerto Rico\"\n    },\n    \"PS\": {\n        \"country\": \"PS\",\n        \"latitude\": 31.952162,\n        \"longitude\": 35.233154,\n        \"name\": \"Palestinian Territories\"\n    },\n    \"PT\": {\n        \"country\": \"PT\",\n        \"latitude\": 39.399872,\n        \"longitude\": -8.224454,\n        \"name\": \"Portugal\"\n    },\n    \"PW\": {\n        \"country\": \"PW\",\n        \"latitude\": 7.51498,\n        \"longitude\": 134.58252,\n        \"name\": \"Palau\"\n    },\n    \"PY\": {\n        \"country\": \"PY\",\n        \"latitude\": -23.442503,\n        \"longitude\": -58.443832,\n        \"name\": \"Paraguay\"\n    },\n    \"QA\": {\n        \"country\": \"QA\",\n        \"latitude\": 25.354826,\n        \"longitude\": 51.183884,\n        \"name\": \"Qatar\"\n    },\n    \"RE\": {\n        \"country\": \"RE\",\n        \"latitude\": -21.115141,\n        \"longitude\": 55.536384,\n        \"name\": \"Réunion\"\n    },\n    \"RO\": {\n        \"country\": \"RO\",\n        \"latitude\": 45.943161,\n        \"longitude\": 24.96676,\n        \"name\": \"Romania\"\n    },\n    \"RS\": {\n        \"country\": \"RS\",\n        \"latitude\": 44.016521,\n        \"longitude\": 21.005859,\n        \"name\": \"Serbia\"\n    },\n    \"RU\": {\n        \"country\": \"RU\",\n        \"latitude\": 61.52401,\n        \"longitude\": 105.318756,\n        \"name\": \"Russia\"\n    },\n    \"RW\": {\n        \"country\": \"RW\",\n        \"latitude\": -1.940278,\n        \"longitude\": 29.873888,\n        \"name\": \"Rwanda\"\n    },\n    \"SA\": {\n        \"country\": \"SA\",\n        \"latitude\": 23.885942,\n        \"longitude\": 45.079162,\n        \"name\": \"Saudi Arabia\"\n    },\n    \"SB\": {\n        \"country\": \"SB\",\n        \"latitude\": -9.64571,\n        \"longitude\": 160.156194,\n        \"name\": \"Solomon Islands\"\n    },\n    \"SC\": {\n        \"country\": \"SC\",\n        \"latitude\": -4.679574,\n        \"longitude\": 55.491977,\n        \"name\": \"Seychelles\"\n    },\n    \"SD\": {\n        \"country\": \"SD\",\n        \"latitude\": 12.862807,\n        \"longitude\": 30.217636,\n        \"name\": \"Sudan\"\n    },\n    \"SE\": {\n        \"country\": \"SE\",\n        \"latitude\": 60.128161,\n        \"longitude\": 18.643501,\n        \"name\": \"Sweden\"\n    },\n    \"SG\": {\n        \"country\": \"SG\",\n        \"latitude\": 1.352083,\n        \"longitude\": 103.819836,\n        \"name\": \"Singapore\"\n    },\n    \"SH\": {\n        \"country\": \"SH\",\n        \"latitude\": -24.143474,\n        \"longitude\": -10.030696,\n        \"name\": \"Saint Helena\"\n    },\n    \"SI\": {\n        \"country\": \"SI\",\n        \"latitude\": 46.151241,\n        \"longitude\": 14.995463,\n        \"name\": \"Slovenia\"\n    },\n    \"SJ\": {\n        \"country\": \"SJ\",\n        \"latitude\": 77.553604,\n        \"longitude\": 23.670272,\n        \"name\": \"Svalbard and Jan Mayen\"\n    },\n    \"SK\": {\n        \"country\": \"SK\",\n        \"latitude\": 48.669026,\n        \"longitude\": 19.699024,\n        \"name\": \"Slovakia\"\n    },\n    \"SL\": {\n        \"country\": \"SL\",\n        \"latitude\": 8.460555,\n        \"longitude\": -11.779889,\n        \"name\": \"Sierra Leone\"\n    },\n    \"SM\": {\n        \"country\": \"SM\",\n        \"latitude\": 43.94236,\n        \"longitude\": 12.457777,\n        \"name\": \"San Marino\"\n    },\n    \"SN\": {\n        \"country\": \"SN\",\n        \"latitude\": 14.497401,\n        \"longitude\": -14.452362,\n        \"name\": \"Senegal\"\n    },\n    \"SO\": {\n        \"country\": \"SO\",\n        \"latitude\": 5.152149,\n        \"longitude\": 46.199616,\n        \"name\": \"Somalia\"\n    },\n    \"SR\": {\n        \"country\": \"SR\",\n        \"latitude\": 3.919305,\n        \"longitude\": -56.027783,\n        \"name\": \"Suriname\"\n    },\n    \"ST\": {\n        \"country\": \"ST\",\n        \"latitude\": 0.18636,\n        \"longitude\": 6.613081,\n        \"name\": \"São Tomé and Príncipe\"\n    },\n    \"SV\": {\n        \"country\": \"SV\",\n        \"latitude\": 13.794185,\n        \"longitude\": -88.89653,\n        \"name\": \"El Salvador\"\n    },\n    \"SY\": {\n        \"country\": \"SY\",\n        \"latitude\": 34.802075,\n        \"longitude\": 38.996815,\n        \"name\": \"Syria\"\n    },\n    \"SZ\": {\n        \"country\": \"SZ\",\n        \"latitude\": -26.522503,\n        \"longitude\": 31.465866,\n        \"name\": \"Swaziland\"\n    },\n    \"TC\": {\n        \"country\": \"TC\",\n        \"latitude\": 21.694025,\n        \"longitude\": -71.797928,\n        \"name\": \"Turks and Caicos Islands\"\n    },\n    \"TD\": {\n        \"country\": \"TD\",\n        \"latitude\": 15.454166,\n        \"longitude\": 18.732207,\n        \"name\": \"Chad\"\n    },\n    \"TF\": {\n        \"country\": \"TF\",\n        \"latitude\": -49.280366,\n        \"longitude\": 69.348557,\n        \"name\": \"French Southern Territories\"\n    },\n    \"TG\": {\n        \"country\": \"TG\",\n        \"latitude\": 8.619543,\n        \"longitude\": 0.824782,\n        \"name\": \"Togo\"\n    },\n    \"TH\": {\n        \"country\": \"TH\",\n        \"latitude\": 15.870032,\n        \"longitude\": 100.992541,\n        \"name\": \"Thailand\"\n    },\n    \"TJ\": {\n        \"country\": \"TJ\",\n        \"latitude\": 38.861034,\n        \"longitude\": 71.276093,\n        \"name\": \"Tajikistan\"\n    },\n    \"TK\": {\n        \"country\": \"TK\",\n        \"latitude\": -8.967363,\n        \"longitude\": -171.855881,\n        \"name\": \"Tokelau\"\n    },\n    \"TL\": {\n        \"country\": \"TL\",\n        \"latitude\": -8.874217,\n        \"longitude\": 125.727539,\n        \"name\": \"Timor-Leste\"\n    },\n    \"TM\": {\n        \"country\": \"TM\",\n        \"latitude\": 38.969719,\n        \"longitude\": 59.556278,\n        \"name\": \"Turkmenistan\"\n    },\n    \"TN\": {\n        \"country\": \"TN\",\n        \"latitude\": 33.886917,\n        \"longitude\": 9.537499,\n        \"name\": \"Tunisia\"\n    },\n    \"TO\": {\n        \"country\": \"TO\",\n        \"latitude\": -21.178986,\n        \"longitude\": -175.198242,\n        \"name\": \"Tonga\"\n    },\n    \"TR\": {\n        \"country\": \"TR\",\n        \"latitude\": 38.963745,\n        \"longitude\": 35.243322,\n        \"name\": \"Turkey\"\n    },\n    \"TT\": {\n        \"country\": \"TT\",\n        \"latitude\": 10.691803,\n        \"longitude\": -61.222503,\n        \"name\": \"Trinidad and Tobago\"\n    },\n    \"TV\": {\n        \"country\": \"TV\",\n        \"latitude\": -7.109535,\n        \"longitude\": 177.64933,\n        \"name\": \"Tuvalu\"\n    },\n    \"TW\": {\n        \"country\": \"TW\",\n        \"latitude\": 23.69781,\n        \"longitude\": 120.960515,\n        \"name\": \"Taiwan\"\n    },\n    \"TZ\": {\n        \"country\": \"TZ\",\n        \"latitude\": -6.369028,\n        \"longitude\": 34.888822,\n        \"name\": \"Tanzania\"\n    },\n    \"UA\": {\n        \"country\": \"UA\",\n        \"latitude\": 48.379433,\n        \"longitude\": 31.16558,\n        \"name\": \"Ukraine\"\n    },\n    \"UG\": {\n        \"country\": \"UG\",\n        \"latitude\": 1.373333,\n        \"longitude\": 32.290275,\n        \"name\": \"Uganda\"\n    },\n    \"UM\": {\n        \"country\": \"UM\",\n        \"latitude\": null,\n        \"longitude\": null,\n        \"name\": \"U.S. Minor Outlying Islands\"\n    },\n    \"US\": {\n        \"country\": \"US\",\n        \"latitude\": 37.09024,\n        \"longitude\": -95.712891,\n        \"name\": \"United States\"\n    },\n    \"UY\": {\n        \"country\": \"UY\",\n        \"latitude\": -32.522779,\n        \"longitude\": -55.765835,\n        \"name\": \"Uruguay\"\n    },\n    \"UZ\": {\n        \"country\": \"UZ\",\n        \"latitude\": 41.377491,\n        \"longitude\": 64.585262,\n        \"name\": \"Uzbekistan\"\n    },\n    \"VA\": {\n        \"country\": \"VA\",\n        \"latitude\": 41.902916,\n        \"longitude\": 12.453389,\n        \"name\": \"Vatican City\"\n    },\n    \"VC\": {\n        \"country\": \"VC\",\n        \"latitude\": 12.984305,\n        \"longitude\": -61.287228,\n        \"name\": \"Saint Vincent and the Grenadines\"\n    },\n    \"VE\": {\n        \"country\": \"VE\",\n        \"latitude\": 6.42375,\n        \"longitude\": -66.58973,\n        \"name\": \"Venezuela\"\n    },\n    \"VG\": {\n        \"country\": \"VG\",\n        \"latitude\": 18.420695,\n        \"longitude\": -64.639968,\n        \"name\": \"British Virgin Islands\"\n    },\n    \"VI\": {\n        \"country\": \"VI\",\n        \"latitude\": 18.335765,\n        \"longitude\": -64.896335,\n        \"name\": \"U.S. Virgin Islands\"\n    },\n    \"VN\": {\n        \"country\": \"VN\",\n        \"latitude\": 14.058324,\n        \"longitude\": 108.277199,\n        \"name\": \"Vietnam\"\n    },\n    \"VU\": {\n        \"country\": \"VU\",\n        \"latitude\": -15.376706,\n        \"longitude\": 166.959158,\n        \"name\": \"Vanuatu\"\n    },\n    \"WF\": {\n        \"country\": \"WF\",\n        \"latitude\": -13.768752,\n        \"longitude\": -177.156097,\n        \"name\": \"Wallis and Futuna\"\n    },\n    \"WS\": {\n        \"country\": \"WS\",\n        \"latitude\": -13.759029,\n        \"longitude\": -172.104629,\n        \"name\": \"Samoa\"\n    },\n    \"XK\": {\n        \"country\": \"XK\",\n        \"latitude\": 42.602636,\n        \"longitude\": 20.902977,\n        \"name\": \"Kosovo\"\n    },\n    \"YE\": {\n        \"country\": \"YE\",\n        \"latitude\": 15.552727,\n        \"longitude\": 48.516388,\n        \"name\": \"Yemen\"\n    },\n    \"YT\": {\n        \"country\": \"YT\",\n        \"latitude\": -12.8275,\n        \"longitude\": 45.166244,\n        \"name\": \"Mayotte\"\n    },\n    \"ZA\": {\n        \"country\": \"ZA\",\n        \"latitude\": -30.559482,\n        \"longitude\": 22.937506,\n        \"name\": \"South Africa\"\n    },\n    \"ZM\": {\n        \"country\": \"ZM\",\n        \"latitude\": -13.133897,\n        \"longitude\": 27.849332,\n        \"name\": \"Zambia\"\n    },\n    \"ZW\": {\n        \"country\": \"ZW\",\n        \"latitude\": -19.015438,\n        \"longitude\": 29.154857,\n        \"name\": \"Zimbabwe\"\n    }\n};\n\n//# sourceURL=webpack://IotaPublicNodeSelection/./src/Geographics.js?");

/***/ }),

/***/ "./src/ServerSelection.js":
/*!********************************!*\
  !*** ./src/ServerSelection.js ***!
  \********************************/
/*! exports provided: getPublicNode, getGeospreadPublicNodes, getLowestLatencyServer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPublicNode\", function() { return getPublicNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGeospreadPublicNodes\", function() { return getGeospreadPublicNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLowestLatencyServer\", function() { return getLowestLatencyServer; });\n/* harmony import */ var _Geographics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Geographics */ \"./src/Geographics.js\");\n/* harmony import */ var _ServerSelection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServerSelection */ \"./src/ServerSelection.js\");\n\n\n\nasync function getPublicNode(serversPerFetch = 15) {\n\n    var myLocation = JSON.parse((await okToFailHTTPRequest(\"https://ipinfo.io/json\", \"{'country':null}\")));\n    var servers = JSON.parse((await okToFailHTTPRequest(\"https://iotanode.host/node_table.json\", \"[]\")));\n    myLocation.lat = myLocation.loc.split(',')[0];\n    myLocation.lon = myLocation.loc.split(',')[1];\n    //Find the highest mile of each server and normalize the country codes.\n    var maxMileStone = null;\n    servers.forEach(server => {\n        maxMileStone = Math.max(maxMileStone, server.latest_milestone_index);\n        if (server.ncountry) {\n            server.ncountry = server.ncountry.toUpperCase();\n        }\n    });\n\n    //Filter the servers on online status and synchronization. Sometimes milestones lag a bit and therefore we take -5\n    //latest milestones as fine. Also detects if the host is using http or https\n    servers = servers.filter(a => a.online === \"1\" && a.latest_milestone_index >= maxMileStone - 5 && a.latest_sub_milestone_index >= maxMileStone - 5 && a.host.startsWith(window.location.protocol));\n\n    //Calculate a general distanceMap for country codes. And put your own country at 0;\n    var distanceMap = {};\n    distanceMap[myLocation.country] = 0;\n    servers.forEach(server => {\n        if (!distanceMap[server.ncountry]) {\n            if (_Geographics__WEBPACK_IMPORTED_MODULE_0__[\"countryMap\"][server.ncountry]) {\n                var countryObj = _Geographics__WEBPACK_IMPORTED_MODULE_0__[\"countryMap\"][server.ncountry];\n                distanceMap[server.ncountry] = Object(_Geographics__WEBPACK_IMPORTED_MODULE_0__[\"getDistanceFromLatLonInKm\"])(myLocation.lat, myLocation.lon, countryObj.latitude, countryObj.longitude);\n            } else {\n                console.log(\"Unknown country found! : \", server);\n                distanceMap[server.ncountry] = 99999999;\n            }\n        }\n        server.distance = distanceMap[server.ncountry];\n    });\n\n    //Sort by distance\n    servers = servers.sort((a, b) => a.distance - b.distance);\n\n    var newHost = null;\n\n    var sliceIndex = 0;\n    while (sliceIndex < servers.length && newHost == null) {\n        //Do 3 requests at a time\n        try {\n            newHost = await getLowestLatencyServer(servers.slice(sliceIndex, sliceIndex + (serversPerFetch - 1)).map(s => s.host));\n        } catch (e) {\n            console.log(\"No servers found, getting next \" + serversPerFetch);\n        }\n        sliceIndex += serversPerFetch;\n    }\n    //var newHost = await getLowestLatencyServer(servers.slice(Math.min(15, servers.length)).map(s => s.host))\n\n    return newHost;\n}\n\nasync function getGeospreadPublicNodes(maxCount = 5) {\n\n    var myLocation = JSON.parse((await okToFailHTTPRequest(\"https://ipinfo.io/json\", \"{'country':null}\")));\n    var servers = JSON.parse((await okToFailHTTPRequest(\"https://iotanode.host/node_table.json\", \"[]\")));\n    myLocation.lat = myLocation.loc.split(',')[0];\n    myLocation.lon = myLocation.loc.split(',')[1];\n    //Find the highest mile of each server and normalize the country codes.\n    var maxMileStone = null;\n    servers.forEach(server => {\n        maxMileStone = Math.max(maxMileStone, server.latest_milestone_index);\n        if (server.ncountry) {\n            server.ncountry = server.ncountry.toUpperCase();\n        }\n    });\n\n    //Filter the servers on online status and synchronization. Sometimes milestones lag a bit and therefore we take -5\n    //latest milestones as fine. Also detects if the host is using http or https\n    servers = servers.filter(a => a.online === \"1\" && a.latest_milestone_index >= maxMileStone - 5 && a.latest_sub_milestone_index >= maxMileStone - 5 && a.host.startsWith(window.location.protocol));\n\n    //Calculate a general distanceMap for country codes. And put your own country at 0;\n    var distanceMap = {};\n    distanceMap[myLocation.country] = 0;\n    servers.forEach(server => {\n        if (!distanceMap[server.ncountry]) {\n            if (_Geographics__WEBPACK_IMPORTED_MODULE_0__[\"countryMap\"][server.ncountry]) {\n                var countryObj = _Geographics__WEBPACK_IMPORTED_MODULE_0__[\"countryMap\"][server.ncountry];\n                distanceMap[server.ncountry] = Object(_Geographics__WEBPACK_IMPORTED_MODULE_0__[\"getDistanceFromLatLonInKm\"])(myLocation.lat, myLocation.lon, countryObj.latitude, countryObj.longitude);\n            } else {\n                console.log(\"Unknown country found! : \", server);\n                distanceMap[server.ncountry] = 99999999;\n            }\n        }\n        server.distance = distanceMap[server.ncountry];\n    });\n    servers = servers.sort((a, b) => a.distance - b.distance);\n\n    //Calculate step size so that the first selection is always close and the last very far away.\n    //And variable steps in between. Using the Geolocation API will result in more random selections but not implemented.\n\n    var selectedServers = getServerFromList(servers, 0, maxCount, []);\n\n    return selectedServers;\n}\n\nasync function getServerFromList(servers, currentIndex, maxCount, results = []) {\n    if (results.length >= maxCount || currentIndex >= servers.length) {\n        return results;\n    }\n\n    var newHost = null;\n\n    var sliceIndex = currentIndex;\n    while (sliceIndex < servers.length && newHost == null) {\n        //Do 3 requests at a time\n        try {\n            newHost = await getLowestLatencyServer(servers.slice(sliceIndex, sliceIndex + 2).map(s => s.host));\n        } catch (e) {\n            console.log(\"No servers found, getting next 3\");\n        }\n        sliceIndex += 3;\n    }\n\n    if (newHost == null) {\n        return []; //No servers found at all.\n    }\n    //Jump some distance on the world for new servers.\n    var stepSize = (servers.length - sliceIndex) / (maxCount - results.length);\n\n    return await getServerFromList(servers, Math.floor(sliceIndex + stepSize), maxCount, results.concat([newHost]));\n}\n\nasync function getLowestLatencyServer(servers = []) {\n\n    return new Promise(function (fulfilled, rejected) {\n        var totalRequests = servers.length;\n        var returned = false;\n        for (let i = 0; i < servers.length; i++) {\n            getNodeLatency(servers[i]).then(latency => {\n                totalRequests -= 1;\n                if (!returned && latency != 999999) {\n                    returned = true;\n                    fulfilled(servers[i]);\n                }\n                if (!returned && totalRequests == 0) {\n                    rejected(\"No valid servers\");\n                }\n            });\n        }\n    });\n}\n\nasync function getNodeLatency(server) {\n    var start = Date.now();\n    var nodeInfo = JSON.parse((await okToFailHTTPRequest(server, \"null\", JSON.stringify({\n        command: 'getNodeInfo'\n    }))));\n\n    if (!nodeInfo) {\n        return 999999;\n    } else {\n        return Date.now() - start;\n    }\n}\n\nasync function okToFailHTTPRequest(url, defaultReturn, postBody = null) {\n    return new Promise(function (fulfilled, rejected) {\n        var x = new XMLHttpRequest();\n\n        x.onload = function (e) {\n            fulfilled(x.responseText);\n        };\n        x.onerror = function (e) {\n            console.log(\"Error: \", e);\n            fulfilled(defaultReturn);\n        };\n        if (postBody) {\n            x.open(\"POST\", url, true);\n            x.setRequestHeader('Content-Type', 'application/json');\n            x.setRequestHeader(\"X-IOTA-API-Version\", \"1\");\n            x.send(postBody);\n        } else {\n            x.open(\"GET\", url, true);\n            x.send();\n        }\n    });\n}\n\n//# sourceURL=webpack://IotaPublicNodeSelection/./src/ServerSelection.js?");

/***/ })

/******/ });